評価観点	評価項目	項目の説明	AnonCreds	DIDComm	OID4VC
基本機能に関する観点	主な用途と目的	プロトコルの設計目的および適用される主なユースケース（認証、資格情報管理、データ共有など）。	◯	◯	◯
設計アプローチ	分散型、中央集権型、セルフソブリン型IDなどのアーキテクチャ方針とインフラ依存性の有無。	△（Hyperledger Indyに依存）	◯	◯
柔軟性	認証フローやデータ管理のカスタマイズ性、さまざまなシナリオへの適用可能性。	✗（特定のシナリオに制約）	◯	◯
ユースケース対応力	企業、政府、消費者向けなど、さまざまな用途への対応力。	✗（用途が限定的）	◯	◯
プライバシーとセキュリティに関する観点	プライバシー保護の機能	データ最小化、同意管理、開示範囲の制御などユーザーが情報を管理する能力。	◯	◯	◯
匿名性の実現度	資格情報提示時に個人情報を明かさずに匿名で証明できる能力。	◯	△（匿名DID使用時のみ実現）	✗（匿名性は提供されていない）
エンドツーエンド暗号化とセキュリティモデル	通信経路全体での暗号化、データのインテグリティ保護、認証プロトコルの堅牢性。	◯	◯	◯
相互運用性と既存インフラの活用	他のプロトコルとの互換性	DID、OAuth 2.0、OpenID Connectなど他のプロトコルとの統合のしやすさ。	✗（DIDと部分的な互換性のみ）	◯	◯
標準規格への準拠性	W3C、ISO、NISTなどの国際標準規格にどの程度準拠しているか。	△（一部W3C VC非互換）	◯	◯
既存システムとの統合容易性	SSO、デジタルIDシステムなど既存の認証システムとの統合のしやすさ。	✗（統合にカスタム実装が必要）	△（DIDサポート時のみ統合可能）	◯
管理・運用に関する観点	資格情報の管理フローと更新性	資格情報の発行、提示、失効、更新のフローが標準化されているかどうか。	△（失効管理が複雑）	◯	◯
セルフカストディへの対応	ユーザーが資格情報を完全に自分で管理できるセルフソブリン型ID（SSI）への対応度。	◯	◯	△（セルフカストディは非推奨）
実装の容易さ	開発者向けのライブラリやツールの充実度、導入時のドキュメントの充実度。	✗（ライブラリが限定的）	◯	◯
既存技術の再利用度	OAuth 2.0、OpenID Connectなど、既存技術スタックの再利用性。	✗（独自プロトコルに依存）	✗	◯
パフォーマンスとスケーラビリティ	トランザクションスループット	高負荷環境やリアルタイム処理時のトランザクション処理能力。	△（ZKP処理で負荷が高い）	◯	◯
システムのスケーラビリティ	デバイス数やユーザー数の増加に対応するシステムの拡張性。	△（集中型でスケールしにくい）	◯	◯
コンプライアンスと規制遵守	規制対応（GDPR、eIDASなど）	データ最小化、ユーザー同意管理、アクセス権管理などの国際規制への対応度。	◯	◯	◯
セキュリティ・コンプライアンスの要件対応度	データ保護法や企業のセキュリティ基準を満たしているかどうか。	◯	◯	◯
